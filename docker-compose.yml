version: '3.9'
services:
  nifi:
    build:
      context: docker_templates/nifi
    container_name: nifi
    environment:
    - NIFI_WEB_HTTP_PORT=8080
    - NIFI_WEB_HTTPS_PORT=8443
    ports:
    - 8080:8080
    - 8443:8443
    networks:
    - data_pipeline_network
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER_PG}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_PG}
      POSTGRES_DB: ${POSTGRES_DB_PG}
    ports:
    - 5432:5432
    volumes:
    - postgres_postgres_postgres_data:/var/lib/postgresql/data
    networks:
    - data_pipeline_network
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
    - 5050:80
    networks:
    - data_pipeline_network
    restart: always
  superset-metadata-db:
    image: postgres:14
    container_name: superset-metadata-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER_SUPERSET}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_SUPERSET}
      POSTGRES_DB: ${POSTGRES_DB_SUPERSET}
    volumes:
    - apachesuperset_superset-metadata-db_superset_db_data:/var/lib/postgresql/data
    ports:
    - 5433:5432
    networks:
    - data_pipeline_network
  superset:
    build:
      context: docker_templates/apachesuperset
    container_name: superset
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_SUPERSET}
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SQLALCHEMY_DATABASE_URI: ${SQLALCHEMY_DATABASE_URI_SUPERSET}
    depends_on:
      superset-metadata-db:
        condition: service_started
    restart: always
    ports:
    - 8088:8088
    networks:
    - data_pipeline_network
  prefect-orion:
    image: prefecthq/prefect:2-latest
    container_name: prefect-orion
    command: "bash -c \"\n  prefect server start --host 0.0.0.0 --port 4200\n\"\n"
    ports:
    - 4200:4200
    volumes:
    - prefect_prefect-orion_prefect_data:/root/.prefect
    networks:
    - data_pipeline_network
  prefect-worker:
    image: prefecthq/prefect:2-latest
    container_name: prefect-worker
    depends_on:
      prefect-orion:
        condition: service_started
    environment:
      PREFECT_API_URL: http://prefect-orion:4200/api
    command: "bash -c \"\n  echo 'Waiting 10 seconds for Orion...' &&\n  sleep 10\
      \ &&\n  prefect worker start -p default\n\"\n"
    networks:
    - data_pipeline_network
    restart: always
networks:
  data_pipeline_network: {}
volumes:
  postgres_postgres_postgres_data: {}
  apachesuperset_superset-metadata-db_superset_db_data: {}
  prefect_prefect-orion_prefect_data: {}
